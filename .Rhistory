dplyr::group_by(stream, variable) %>%
dplyr::mutate(CV_DSi = sd(conc_clean, na.rm=T)/mean(conc_clean, na.rm=T))
one_stream<-MCM_long_record %>%
dplyr::filter(stream==long_streams[i]) %>%
dplyr::mutate(year_CV = paste0(variable, "-", CV_DSi))
ggplot(one_stream, aes(Period, conc_clean))+geom_line()+
theme_bw()+theme(text = element_text(size = 25))+scale_x_continuous(breaks = seq(1,12,1))+
labs(x="Flow Period (~5 days)", y="Si Concentration (mg/L)")+
facet_wrap(~year_CV)+ggtitle(long_streams[i])
MCM_long_record <- MCM_long_record %>%
dplyr::group_by(stream, variable) %>%
dplyr::mutate(CV_DSi = round(sd(conc_clean, na.rm=T)/mean(conc_clean, na.rm=T), 2))
long_streams<-unique(MCM_long_record$stream)
one_stream<-MCM_long_record %>%
dplyr::filter(stream==long_streams[i]) %>%
dplyr::mutate(year_CV = paste0(variable, "-", CV_DSi))
ggplot(one_stream, aes(Period, conc_clean))+geom_line()+
theme_bw()+theme(text = element_text(size = 25))+scale_x_continuous(breaks = seq(1,12,1))+
labs(x="Flow Period (~5 days)", y="Si Concentration (mg/L)")+
facet_wrap(~year_CV)+ggtitle(long_streams[i])
one_stream<-MCM_long_record %>%
dplyr::filter(stream==long_streams[i]) %>%
dplyr::mutate(year_CV = paste(variable, "CV DSi =", CV_DSi))
ggplot(one_stream, aes(Period, conc_clean))+geom_line()+
theme_bw()+theme(text = element_text(size = 25))+scale_x_continuous(breaks = seq(1,12,1))+
labs(x="Flow Period (~5 days)", y="Si Concentration (mg/L)")+
facet_wrap(~year_CV)+ggtitle(long_streams[i])
pdf("CV_Streams.pdf")
for (i in 1:length(long_streams)) {
one_stream<-MCM_long_record %>%
dplyr::filter(stream==long_streams[i]) %>%
dplyr::mutate(year_CV = paste(variable, "CV DSi =", CV_DSi))
p1<-ggplot(one_stream, aes(Period, conc_clean))+geom_line()+
theme_bw()+theme(text = element_text(size = 25))+scale_x_continuous(breaks = seq(1,12,1))+
labs(x="Flow Period (~5 days)", y="Si Concentration (mg/L)")+
facet_wrap(~year_CV)+ggtitle(long_streams[i])
print(p1)
}
dev.off()
pdf("CV_Streams.pdf", width = 12, height = 8)
for (i in 1:length(long_streams)) {
one_stream<-MCM_long_record %>%
dplyr::filter(stream==long_streams[i]) %>%
dplyr::mutate(year_CV = paste(variable, "CV DSi =", CV_DSi))
p1<-ggplot(one_stream, aes(Period, conc_clean))+geom_line()+
theme_bw()+theme(text = element_text(size = 15))+scale_x_continuous(breaks = seq(1,12,1))+
labs(x="Flow Period (~5 days)", y="Si Concentration (mg/L)")+
facet_wrap(~year_CV)+ggtitle(long_streams[i])
print(p1)
}
dev.off()
setwd("/Users/keirajohnson/Box Sync/Keira_Johnson/SiSyn")
spatial_drivers<-read.csv("all-data_si-extract_2_20240802.csv")
setwd("/Users/keirajohnson/Box Sync/Keira_Johnson/SiSyn")
#merge in spatial drivers
drivers_link<-"https://drive.google.com/file/d/16Y__RkX6hOpyJUuliEgnsfeiJv0WYbcj/view?usp=drive_link"
drivers_folder = drive_get(as_id(drivers_link))
#download ref table
drivers<-drive_download(drivers_folder$drive_resource, overwrite = T)
spatial_drivers<-read.csv("all-data_si-extract_2_20240802.csv")
months_abb<-c("jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec_")
monthly_drivers<-spatial_drivers[,c(which(colnames(spatial_drivers) %like% months_abb))]
spatial_drivers<-spatial_drivers[,-c(which(colnames(spatial_drivers) %like% months_abb))]
major_cat_vars<-which(colnames(spatial_drivers) %like% c("soil|land|rock"))
elevation<-which(colnames(spatial_drivers) %like% "elevation")
cat_vars<-spatial_drivers[,c(major_cat_vars, elevation)]
cat_vars$Stream_Name<-spatial_drivers$Stream_Name
drivers_list_quant<-c("num_days", "prop_area", "precip", "evapotrans", "temp", "npp")
greenup<-c("cycle0", "cycle1")
site_mean<-list()
for (i in 1:length(drivers_list_quant)) {
drive_cols<-grep(drivers_list_quant[i], colnames(spatial_drivers))
one_driver<-spatial_drivers[,c(4, drive_cols)]
remove_years<-c(grep("2022", colnames(one_driver)), grep("2023", colnames(one_driver)))
one_driver<-one_driver[,-c(remove_years)]
site_mean[[i]]<-rowMeans(one_driver[,c(2:length(one_driver))], na.rm = TRUE)
}
mean_df<-as.data.frame(do.call(cbind, site_mean))
colnames(mean_df)<-drivers_list_quant
mean_df$Stream_Name<-spatial_drivers$Stream_Name
greenup_mean<-list()
for (i in 1:length(greenup)) {
drive_cols<-grep(greenup[i], colnames(spatial_drivers))
one_driver<-spatial_drivers[,c(4, drive_cols)]
one_driver<-one_driver[!duplicated(one_driver$Stream_Name),]
remove_years<-c(grep("2020", colnames(one_driver)), grep("2021", colnames(one_driver)), grep("2022", colnames(one_driver)))
one_driver<-one_driver[,-c(remove_years)]
driver_melt<-melt(one_driver, id.vars="Stream_Name")
driver_melt$doy<-yday(as.Date(driver_melt$value, "%Y-%m-%d"))
one_driver<-dcast(driver_melt, Stream_Name~variable, value.var = "doy")
greenup_mean[[i]]<-rowMeans(one_driver[,c(2:length(one_driver))], na.rm = TRUE)
}
green_df<-as.data.frame(do.call(cbind, greenup_mean))
colnames(green_df)<-greenup
green_df$Stream_Name<-one_driver$Stream_Name
mean_df<-merge(mean_df, green_df, by="Stream_Name")
mean_df<-merge(mean_df, cat_vars, by="Stream_Name")
mean_df<-mean_df[!duplicated(mean_df$Stream_Name),]
View(mean_df)
ref_table_link<-"https://docs.google.com/spreadsheets/d/11t9YYTzN_T12VAQhHuY5TpVjGS50ymNmKznJK4rKTIU/edit?usp=sharing"
ref_table_folder = drive_get(as_id(ref_table_link))
#download ref table
ref_table<-drive_download(ref_table_folder$drive_resource, overwrite = T)
ref_table<-readxl::read_xlsx("Site_Reference_Table.xlsx")
area<-ref_table[,c("Stream_Name", "Latitude", "Longitude", "drainSqKm", "LTER")]
tot<-left_join(mean_df, area, by="Stream_Name")
tot<-data.frame(tot, rndCoord.lon=RoundCoordinates(tot$Longitude),
rndCoord.lat=RoundCoordinates(tot$Latitude))
#get KG for each site
tot <- data.frame(tot,ClimateZ=LookupCZ(tot))
setwd("/Users/keirajohnson/Box Sync/Hydrology_Lab/Projects/Low Flow")
geo<-read.csv("Lithology_Area_Data_AllSites.csv")
View(geo)
unique(geo$over_site_)
unique(geo$MAJOR1)
unique(geo$GENERALIZE)
geo_major<-data.frame(unique(geo$MAJOR1))
geo_generalized<-data.frame(unique(geo$GENERALIZE))
write.csv(geo_major, "Geo_Major.csv")
write.csv(geo_generalized, "Geo_Generalized.csv")
####Dynamic Storage####
setwd("/Users/keirajohnson/Box Sync/Hydrology_Lab/Projects/Low Flow/Data/WRTDS_Inputs")
####Dynamic Storage####
setwd("/Users/keirajohnson/Box Sync/Hydrology_Lab/Projects/Low Flow/Data/WRTDS_Inputs")
Q<-read.csv("WRTDS_Q_Input_Final_08132024.csv")
info<-read.csv("WRTDS_site_info.csv")
View(info)
View(info)
Q<-left_join(Q, info[,c(3,31)])
View(Q)
Q$drain_area_va<-Q$drain_area_va*2.59e+6
View(Q)
Q$Q_mm<-(Q$discharge*86400*1000)/Q$drain_area_va
View(Q)
setwd("/Users/keirajohnson/Box Sync/Hydrology_Lab/Projects/Low Flow/ERA5_Data/CompiledData")
ET<-read.csv("EVAP_AllSites.csv")
precip<-read.csv("Precip_AllSites")
precip<-read.csv("Precip_AllSites.csv")
ET<-ET[,-c(1,6)]
ET_melt<-melt(ET, id.vars="dates")
ET_melt$site_no<-gsub('^.|.$', '', ET_melt$variable)
ET_melt$site_no<-substr(ET_melt$site_no, 1, nchar(ET_melt$site_no)-1)
ET_melt$dates<-as.Date(ET_melt$dates)
precip<-precip[,-c(1,6)]
precip_melt<-melt(precip, id.vars="dates")
precip_melt$site_no<-gsub('^.|.$', '', precip_melt$variable)
precip_melt$site_no<-substr(precip_melt$site_no, 1, nchar(precip_melt$site_no)-1)
precip_melt$dates<-as.Date(precip_melt$dates)
Q$dates<-as.Date(Q$Date)
all_vars<-left_join(Q[,c(3,6,7)], ET_melt[,c(1,3,4)], by=c("site_no", "dates"))
ET_melt$site_no<-as.numeric(ET_melt$site_no)
precip_melt$site_no<-as.numeric(precip_melt$site_no)
all_vars<-left_join(Q[,c(3,6,7)], ET_melt[,c(1,3,4)], by=c("site_no", "dates"))
colnames(all_vars)[4]<-"ET"
all_vars<-left_join(all_vars, precip_melt[,c(1,3,4)], by=c("site_no", "dates"))
colnames(all_vars)[5]<-"precip"
all_vars$waterYear<-get_waterYear(all_vars$dates)
View(all_vars)
all_vars<-all_vars %>%
group_by(waterYear) %>%
mutate(hydro_flux=cumsum(Q_mm), hydro_flux_prop=hydro_flux/max(hydro_flux)) %>%
mutate(Q_smoothed = rollmean(Q_mm, k = 7, fill = NA, align = "right"))
require(ggpubr)
require(dplyr)
require(data.table)
require(reshape2)
require(EflowStats)
require(zoo)
require(ggplot2)
all_vars<-all_vars %>%
group_by(waterYear) %>%
mutate(hydro_flux=cumsum(Q_mm), hydro_flux_prop=hydro_flux/max(hydro_flux)) %>%
mutate(Q_smoothed = rollmean(Q_mm, k = 7, fill = NA, align = "right"))
all_vars<-left_join(Q[,c(3,6,7)], ET_melt[,c(1,3,4)], by=c("site_no", "dates"))
colnames(all_vars)[4]<-"ET"
all_vars<-left_join(all_vars, precip_melt[,c(1,3,4)], by=c("site_no", "dates"))
colnames(all_vars)[5]<-"precip"
all_vars$waterYear<-get_waterYear(all_vars$dates)
all_vars<-all_vars %>%
group_by(site_no) %>%
mutate(Q_smoothed = rollmean(Q_mm, k = 7, fill = NA, align = "right"))
View(all_vars)
all_vars<-all_vars %>%
group_by(waterYear, site_no) %>%
mutate(hydro_flux=cumsum(Q_mm), hydro_flux_prop=hydro_flux/max(hydro_flux))
all_vars<-all_vars %>%
group_by(c(waterYear, site_no)) %>%
mutate(hydro_flux=cumsum(Q_mm), hydro_flux_prop=hydro_flux/max(hydro_flux))
sum(is.na(all_vars$waterYear))
sum(is.na(all_vars$site_no))
all_vars<-left_join(Q[,c(3,6,7)], ET_melt[,c(1,3,4)], by=c("site_no", "dates"))
colnames(all_vars)[4]<-"ET"
all_vars<-left_join(all_vars, precip_melt[,c(1,3,4)], by=c("site_no", "dates"))
colnames(all_vars)[5]<-"precip"
all_vars$waterYear<-get_waterYear(all_vars$dates)
all_vars<-all_vars %>%
dplyr::group_by(site_no) %>%
dplyr::mutate(Q_smoothed = rollmean(Q_mm, k = 7, fill = NA, align = "right"))
all_vars<-all_vars %>%
dplyr::group_by(c(waterYear, site_no)) %>%
dplyr::mutate(hydro_flux=cumsum(Q_mm), hydro_flux_prop=hydro_flux/max(hydro_flux))
all_vars<-all_vars %>%
dplyr::group_by(waterYear, site_no) %>%
dplyr::mutate(hydro_flux=cumsum(Q_mm), hydro_flux_prop=hydro_flux/max(hydro_flux))
View(all_vars)
all_vars <- all_vars %>%
group_by(waterYear, site_no) %>%
filter(hydro_flux_prop > 40) %>%
mutate(tag = if_else(Q_smoothed == max(Q_smoothed), "peak", "not peak"))
all_vars<-left_join(Q[,c(3,6,7)], ET_melt[,c(1,3,4)], by=c("site_no", "dates"))
colnames(all_vars)[4]<-"ET"
all_vars<-left_join(all_vars, precip_melt[,c(1,3,4)], by=c("site_no", "dates"))
colnames(all_vars)[5]<-"precip"
all_vars$waterYear<-get_waterYear(all_vars$dates)
all_vars<-all_vars %>%
dplyr::group_by(site_no) %>%
dplyr::mutate(Q_smoothed = rollmean(Q_mm, k = 7, fill = NA, align = "right"))
all_vars<-all_vars %>%
dplyr::group_by(waterYear, site_no) %>%
dplyr::mutate(hydro_flux=cumsum(Q_mm), hydro_flux_prop=hydro_flux/max(hydro_flux))
all_vars <- all_vars %>%
dplyr::group_by(waterYear, site_no) %>%
dplyr::filter(hydro_flux_prop > 40) %>%
dplyr::mutate(tag = if_else(Q_smoothed == max(Q_smoothed), "peak", "not peak"))
all_vars<-left_join(Q[,c(3,6,7)], ET_melt[,c(1,3,4)], by=c("site_no", "dates"))
colnames(all_vars)[4]<-"ET"
all_vars<-left_join(all_vars, precip_melt[,c(1,3,4)], by=c("site_no", "dates"))
colnames(all_vars)[5]<-"precip"
all_vars$waterYear<-get_waterYear(all_vars$dates)
all_vars<-all_vars %>%
dplyr::group_by(site_no) %>%
dplyr::mutate(Q_smoothed = rollmean(Q_mm, k = 7, fill = NA, align = "right"))
all_vars<-all_vars %>%
dplyr::group_by(waterYear, site_no) %>%
dplyr::mutate(hydro_flux=cumsum(Q_mm), hydro_flux_prop=hydro_flux/max(hydro_flux))
all_vars <- all_vars %>%
dplyr::group_by(waterYear, site_no) %>%
dplyr::filter(hydro_flux_prop > .40) %>%
dplyr::mutate(tag = if_else(Q_smoothed == max(Q_smoothed), "peak", "not peak"))
View(all_vars)
all_vars <- all_vars %>%
dplyr::group_by(waterYear, site_no) %>%
dplyr::filter(hydro_flux_prop > .40) %>%
dplyr::mutate(tag = if_else(Q_smoothed == max(Q_smoothed), "peak", NA_character_))
View(all_vars)
all_vars_filtered <- all_vars %>%
dplyr::group_by(waterYear, site_no) %>%
mutate(peak_occurred = cumsum(!is.na(tag)) > 0) %>%  # Create a logical column to indicate if peak has occurred
filter(peak_occurred)
View(all_vars_filtered)
all_vars_filtered <- all_vars %>%
dplyr::group_by(waterYear, site_no) %>%
dplyr::mutate(peak_occurred = cumsum(!is.na(tag)) > 0) %>%  # Create a logical column to indicate if peak has occurred
dplyr::filter(peak_occurred)
View(all_vars_filtered)
all_vars_filtered<-all_vars_filtered %>%
dplyr::group_by(waterYear, site_no) %>%
dplyr::mutate(dS=precip*1000-Q_mm-ET*-1000)
all_vars_filtered<-all_vars_filtered %>%
dplyr::group_by(waterYear, site_no) %>%
dplyr::mutate(dS=precip*1000-Q_mm-ET*-1000) %>%
dplyr::mutate(dS_sum=cumsum(dS))
sites<-unique(all_vars_filtered$site_no)
i=4
one_site<-all_vars_filtered %>%
filter(site_no==sites[i])
ggplot(one_site, aes(dates, dS_sum, col=waterYear))+geom_line(aes(group=waterYear))+
theme_classic()+theme(text = element_text(size = 20))+
scale_color_gradientn(values = c("red", "purple", "blue"))
ggplot(one_site, aes(dates, dS_sum, col=waterYear))+geom_line(aes(group=waterYear))+
theme_classic()+theme(text = element_text(size = 20))+
scale_color_gradientn(colors = c("red", "purple", "blue"))
all_vars_filtered<-all_vars_filtered %>%
dplyr::group_by(waterYear, site_no) %>%
dplyr::mutate(dS=precip*1000-Q_mm-ET*-1000) %>%
dplyr::mutate(dS_sum=cumsum(dS)) %>%
dplyr::mutate(WY_day = get_waterYearDay(dates))
one_site<-all_vars_filtered %>%
filter(site_no==sites[i])
ggplot(one_site, aes(dates, dS_sum, col=waterYear))+geom_line(aes(group=waterYear))+
theme_classic()+theme(text = element_text(size = 20))+
scale_color_gradientn(colors = c("red", "purple", "blue"))
ggplot(one_site, aes(WY_day, dS_sum, col=waterYear))+geom_line(aes(group=waterYear))+
theme_classic()+theme(text = element_text(size = 20))+
scale_color_gradientn(colors = c("red", "purple", "blue"))
View(one_site)
all_vars<-left_join(Q[,c(3,6,7)], ET_melt[,c(1,3,4)], by=c("site_no", "dates"))
colnames(all_vars)[4]<-"ET"
all_vars<-left_join(all_vars, precip_melt[,c(1,3,4)], by=c("site_no", "dates"))
colnames(all_vars)[5]<-"precip"
all_vars$waterYear<-get_waterYear(all_vars$dates)
all_vars <- all_vars %>%
dplyr::group_by(waterYear, site_no) %>%
dplyr::filter(n_distinct(date) == 365)
all_vars <- all_vars %>%
dplyr::group_by(waterYear, site_no) %>%
dplyr::filter(n_distinct(dates) == 365)
all_vars<-all_vars %>%
dplyr::group_by(site_no) %>%
dplyr::mutate(Q_smoothed = rollmean(Q_mm, k = 7, fill = NA, align = "right"))
all_vars<-all_vars %>%
dplyr::group_by(waterYear, site_no) %>%
dplyr::mutate(hydro_flux=cumsum(Q_mm), hydro_flux_prop=hydro_flux/max(hydro_flux))
all_vars <- all_vars %>%
dplyr::group_by(waterYear, site_no) %>%
dplyr::filter(hydro_flux_prop > .40) %>%
dplyr::mutate(tag = if_else(Q_smoothed == max(Q_smoothed), "peak", NA_character_))
all_vars_filtered <- all_vars %>%
dplyr::group_by(waterYear, site_no) %>%
dplyr::mutate(peak_occurred = cumsum(!is.na(tag)) > 0) %>%  # Create a logical column to indicate if peak has occurred
dplyr::filter(peak_occurred)
all_vars_filtered<-all_vars_filtered %>%
dplyr::group_by(waterYear, site_no) %>%
dplyr::mutate(dS=precip*1000-Q_mm-ET*-1000) %>%
dplyr::mutate(dS_sum=cumsum(dS)) %>%
dplyr::mutate(WY_day = get_waterYearDay(dates))
sites<-unique(all_vars_filtered$site_no)
one_site<-all_vars_filtered %>%
filter(site_no==sites[i])
ggplot(one_site, aes(WY_day, dS_sum, col=waterYear))+geom_line(aes(group=waterYear))+
theme_classic()+theme(text = element_text(size = 20))+
scale_color_gradientn(colors = c("red", "purple", "blue"))
ggplot(one_site, aes(WY_day, dS_sum, col=waterYear))+geom_line(aes(group=waterYear))+
theme_classic()+theme(text = element_text(size = 20))+
scale_color_gradientn(colors = c("red", "purple", "blue"))+
ggtitle(sites[i])
ggplot(one_site, aes(WY_day, dS_sum, col=waterYear))+geom_line(aes(group=waterYear))+
theme_classic()+theme(text = element_text(size = 20))+
scale_color_gradientn(colors = c("red", "purple", "blue"))+
ggtitle(sites[i])+labs(x="Water Year Day", y="DS drawdown (mm)", col="Water Year")
pdf("DS_drawdown.pdf")
for (i in 1:length(sites)) {
one_site<-all_vars_filtered %>%
filter(site_no==sites[i])
p1<-ggplot(one_site, aes(WY_day, dS_sum, col=waterYear))+geom_line(aes(group=waterYear))+
theme_classic()+theme(text = element_text(size = 20))+
scale_color_gradientn(colors = c("red", "purple", "blue"))+
ggtitle(sites[i])+labs(x="Water Year Day", y="DS drawdown (mm)", col="Water Year")
print(p1)
}
dev.off()
View(all_vars)
View(all_vars_filtered)
View(all_vars_filtered)
ds_df<-all_vars_filtered[,c(1,3,6,12,13,14)]
View(ds_df)
write.csv(ds_df, "DS_drawdown.csv")
getwd()
setwd("/Users/keirajohnson/Box Sync/Hydrology_Lab/Projects/Low Flow")
geo<-read.csv("Lithology_Area_Data_AllSites.csv")
setwd("/Users/keirajohnson/Box Sync/Hydrology_Lab/Projects/Low Flow/Geo")
geo<-read.csv("Lithology_Area_Data_AllSites.csv")
View(geo)
geo<-geo[,c(9,21,31,41,42)]
geo_sum<-geo %>%
dplyr::group_by(over_site_) %>%
dplyr::summarise(class_sum=sum(area), class_prop=class_sum/over_Area_)
View(geo_sum)
geo<-read.csv("Lithology_Area_Data_AllSites.csv")
View(geo)
unique(geo$over_site_)
geo_sum<-geo %>%
dplyr::group_by(over_site_) %>%
dplyr::summarise(n_distinct())
geo_sum<-geo %>%
dplyr::group_by(over_site_) %>%
tally()
View(geo_sum)
geo<-geo %>%
dplyr::mutate(class_prop=area/over_Area_)
View(geo)
geo_sum<-geo %>%
dplyr::group_by(over_site_) %>%
dplyr::summarise(prop_sum=sum(class_prop))
View(geo_sum)
geo_sum<-geo %>%
dplyr::group_by(over_site_) %>%
dplyr::summarise(prop_sum=sum(class_prop, na.rm = T))
View(geo_sum)
one_site<-geo %>%
dplyr::filter(over_site_==6.115200e+06)
View(one_site)
one_site<-geo %>%
dplyr::filter(over_site_==9.380000e+06)
View(one_site)
setwd("/Users/keirajohnson/Box Sync/Hydrology_Lab/Projects/Low Flow/Geo")
setwd("/Users/keirajohnson/Box Sync/Hydrology_Lab/Projects/Low Flow/Geo")
geo<-read.csv("Lithology_Area_Data_AllSites.csv")
geo<-geo %>%
dplyr::mutate(class_prop=area/over_Area_)
geo_sum<-geo %>%
dplyr::group_by(over_site_) %>%
dplyr::summarise(prop_sum=sum(class_prop, na.rm = T))
one_site<-geo %>%
dplyr::filter(over_site_==9.380000e+06)
View(one_site)
geo<-geo %>%
dplyr::mutate(class_prop=ClassArea/over_Area_)
geo_sum<-geo %>%
dplyr::group_by(over_site_) %>%
dplyr::summarise(prop_sum=sum(class_prop, na.rm = T))
View(geo_sum)
View(geo)
geo<-geo %>%
dplyr::mutate(class_prop=ClassArea/over_Area_)
geo_sum<-geo %>%
dplyr::group_by(over_site_) %>%
dplyr::summarise(prop_sum=sum(class_prop, na.rm = T))
View(geo_sum)
geo<-geo %>%
dplyr::mutate(class_prop=area/over_Area_)
geo_sum<-geo %>%
dplyr::group_by(over_site_) %>%
dplyr::summarise(prop_sum=sum(class_prop, na.rm = T))
View(geo_sum)
setwd("/Users/keirajohnson/Box Sync/Keira_Johnson/SiSyn")
tot<-read.csv("Drivers_AllSites_10252024.csv")
View(tot)
#this one is called "solute_drivers"
load("SoluteDrivers_ShinyAppCleaned.RDS")
setwd("/Users/keirajohnson/GlASS_Shiny")
#this one is called "solute_drivers"
load("SoluteDrivers_ShinyAppCleaned.RDS")
#this one is called "solute_drivers_all"
load("SoluteDriversAll_ShinyAppCleaned.RDS")
View(solute_drivers)
unique(solute_drivers$Driver)
View(solute_drivers_all)
View(tot)
tot_cat<-tot[,c(2,4,5,6,7,8,9,43,48,52,53)]
View(tot_cat)
#read in master chemistry
master_chem<-read.csv("/Users/keirajohnson/Box Sync/Keira_Johnson/ShinyAppData_GlASS/20241003_masterdata_chem.csv")
#keep only solutes of interest
master_chem<-subset(master_chem, master_chem$variable %in% c("SRP", "PO4", "DSi", "Ca", "K", "Na", "Mg", "NO3",
"NOx", "NH4", "dissolved org C", "SO4","Cl"))
#convert date column to date and remove any rows missing dates
master_chem$date<-as.Date(master_chem$date)
master_chem<-master_chem[complete.cases(master_chem$date),]
#manually convert site names that changed between V1 and V2 of the master chemistry files
master_chem<-master_chem %>%
mutate(Stream_Name = case_when(
Stream_Name=="COMO"~"Como Creek",
Stream_Name=="MG_WEIR"~"Marshall Gulch",
Stream_Name=="OR_low"~"Oracle Ridge",
.default = Stream_Name
))
#convert units from uM to mg/L
master_chem <- master_chem %>%
mutate(value = case_when(
variable=="NO3"~value*14.0067/1000,
variable=="NOx"~value*14.0067/1000,
variable=="NH4"~value*14.0067/1000,
variable=="PO4"~value*30.973762/1000,
variable=="SRP"~value*30.973762/1000,
variable=="Mg"~value*24.30500/1000,
variable=="Ca"~value*40.0780/1000,
variable=="K"~value*39.09830/1000,
variable=="Na"~value*22.989769280/1000,
variable=="DSi"~value*28.0855/1000,
variable=="dissolved org C"~value*12.011/1000,
variable=="SO4"~value*96.06/1000,
variable=="Cl"~value*35.453/1000,
.default = value
))
#combine NOx/NO3 and SRP/PO4 columns into N and P, respectively
master_chem<-master_chem %>%
mutate(variable = case_when(
variable=="NO3"~"N",
variable=="NOx"~"N",
variable=="SRP"~"P",
variable=="PO4"~"P",
variable=="dissolved org C"~"DOC",
.default = variable
))
View(master_chem)
#rename some LTER names so that they are consistent between master chem and master Q
#note that NEON is converted to NWT since the site from NEON is Como Creek, which is part of Niwot Ridge LTER
master_chem<-master_chem %>%
mutate(LTER = case_when(
LTER=="UMR(Jankowski)"~"UMR",
LTER=="LMP(Wymore)"~"LMP",
LTER=="KRR(Julian)"~"KRR",
LTER=="Sagehen(Sullivan)"~"Sagehen",
LTER=="WalkerBranch"~"Walker Branch",
LTER=="CZO-Catalina Jemez"~"Catalina Jemez",
LTER=="NEON"~"Walker Branch",
LTER=="MD"~"Murray Darling Basin Authority",
LTER=="Finnish Environmental Institute"~"Finnish Environment Institute",
.default = LTER
))
chem_avg<-master_chem %>%
dplyr::group_by(Stream_Name, variable) %>%
dplyr::summarise(mean_val=mean(value, na.rm = T))
View(chem_avg)
chem_avg<-master_chem %>%
dplyr::filter(Stream_Name %in% unique(tot$Stream_Name)) %>%
dplyr::group_by(Stream_Name, variable) %>%
dplyr::summarise(mean_val=mean(value, na.rm = T))
View(chem_avg)
View(tot)
View(tot_cat)
tot_cat_melt<-melt(tot_cat, id.vars="Stream_Name")
View(tot_cat_melt)
chem_avg<-master_chem %>%
dplyr::filter(Stream_Name %in% unique(tot$Stream_Name)) %>%
dplyr::group_by(Stream_Name, variable) %>%
dplyr::summarise(value=mean(value, na.rm = T))
setdiff(tot_cat_melt$Stream_Name, chem_avg$Stream_Name)
tot_all<-bind_rows(tot_cat_melt, chem_avg)
View(tot_all)
unique(tot_all$variable)
